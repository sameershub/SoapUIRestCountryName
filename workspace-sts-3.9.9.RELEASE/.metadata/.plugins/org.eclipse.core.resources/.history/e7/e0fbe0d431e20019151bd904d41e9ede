package entities;


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;
import org.hibernate.annotations.DynamicUpdate;

@Entity
public class Users {
	
	@Id
	  private int id;
	  private String userName;
	  private String firstName;
	  private String lastName;
	  private String middleName;
	  private String email;
	  private String phoneNumber;
	  private Date startDate;
	  private Date endDate;
	  private int timeZoneId;
	  private String password;
	  private String description;
	  private String userRoles;
	  private String userDepartment;
	  private String status;
	  
	  public int getId() { return this.id; }


	  
	  public void setId(int id) { this.id = id; }


	  
	  public String getUserName() { return this.userName; }


	  
	  public void setUserName(String userName) { this.userName = userName; }


	  
	  public String getFirstName() { return this.firstName; }


	  
	  public void setFirstName(String firstName) { this.firstName = firstName; }


	  
	  public String getLastName() { return this.lastName; }


	  
	  public void setLastName(String lastName) { this.lastName = lastName; }


	  
	  public String getMiddleName() { return this.middleName; }


	  
	  public void setMiddleName(String middleName) { this.middleName = middleName; }


	  
	  public String getEmail() { return this.email; }


	  
	  public void setEmail(String email) { this.email = email; }


	  
	  public String getPhoneNumber() { return this.phoneNumber; }


	  
	  public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }


	  
	  public Date getStartDate() { return this.startDate; }


	  
	  public void setStartDate(Date startDate) { this.startDate = startDate; }


	  
	  public Date getEndDate() { return this.endDate; }


	  
	  public void setEndDate(Date endDate) { this.endDate = endDate; }


	  
	  public int getTimeZoneId() { return this.timeZoneId; }


	  
	  public void setTimeZoneId(int timeZoneId) { this.timeZoneId = timeZoneId; }

	  
	  public String getPassword() { return this.password; }


	  
	  public void setPassword(String password) { this.password = password; }


	  
	  public String getDescription() { return this.description; }


	  
	  public void setDescription(String description) { this.description = description; }


	  
	  public String getUserRoles() { return this.userRoles; }


	  
	  public void setUserRoles(String userRoles) { this.userRoles = userRoles; }


	  
	  public String getUserDepartment() { return this.userDepartment; }


	  
	  public void setUserDepartment(String userDepartment) { this.userDepartment = userDepartment; }


	  
	  public String getStatus() { return this.status; }


	  
	  public void setStatus(String status) { this.status = status; }



	@Override
	public String toString() {
		return "Users [id=" + id + ", userName=" + userName + ", firstName=" + firstName + ", lastName=" + lastName
				+ ", middleName=" + middleName + ", email=" + email + ", phoneNumber=" + phoneNumber + ", startDate="
				+ startDate + ", endDate=" + endDate + ", timeZoneId=" + timeZoneId + ", password=" + password
				+ ", description=" + description + ", userRoles=" + userRoles + ", userDepartment=" + userDepartment
				+ ", status=" + status + "]";
	}


	  /*
	  public int hashCode() {
	    int prime = 31;
	    int result;
	    result = 1;
	    result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
	    result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
	    result = prime * result + ((this.endDate == null) ? 0 : this.endDate.hashCode());
	    result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
	    result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
	    result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
	    result = prime * result + ((this.middleName == null) ? 0 : this.middleName.hashCode());
	    result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
	    result = prime * result + ((this.phoneNumber == null) ? 0 : this.phoneNumber.hashCode());
	    result = prime * result + ((this.startDate == null) ? 0 : this.startDate.hashCode());
	    result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
	    result = prime * result + this.timeZoneId;
	    result = prime * result + ((this.userDepartment == null) ? 0 : this.userDepartment.hashCode());
	    result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
	    return prime * result + ((this.userRoles == null) ? 0 : this.userRoles.hashCode());
	  }


	  
	  public boolean equals(Object obj) {
	    if (this == obj)
	      return true; 
	    if (obj == null)
	      return false; 
	    if (getClass() != obj.getClass())
	      return false; 
	    Users other = (Users)obj;
	    if (this.description == null) {
	      if (other.description != null)
	        return false; 
	    } else if (!this.description.equals(other.description)) {
	      return false;
	    }  if (this.email == null) {
	      if (other.email != null)
	        return false; 
	    } else if (!this.email.equals(other.email)) {
	      return false;
	    }  if (this.endDate == null) {
	      if (other.endDate != null)
	        return false; 
	    } else if (!this.endDate.equals(other.endDate)) {
	      return false;
	    }  if (this.firstName == null) {
	      if (other.firstName != null)
	        return false; 
	    } else if (!this.firstName.equals(other.firstName)) {
	      return false;
	    }  if (this.id == null) {
	      if (other.id != null)
	        return false; 
	    } else if (!this.id.equals(other.id)) {
	      return false;
	    }  if (this.lastName == null) {
	      if (other.lastName != null)
	        return false; 
	    } else if (!this.lastName.equals(other.lastName)) {
	      return false;
	    }  if (this.middleName == null) {
	      if (other.middleName != null)
	        return false; 
	    } else if (!this.middleName.equals(other.middleName)) {
	      return false;
	    }  if (this.password == null) {
	      if (other.password != null)
	        return false; 
	    } else if (!this.password.equals(other.password)) {
	      return false;
	    }  if (this.phoneNumber == null) {
	      if (other.phoneNumber != null)
	        return false; 
	    } else if (!this.phoneNumber.equals(other.phoneNumber)) {
	      return false;
	    }  if (this.startDate == null) {
	      if (other.startDate != null)
	        return false; 
	    } else if (!this.startDate.equals(other.startDate)) {
	      return false;
	    }  if (this.status == null) {
	      if (other.status != null)
	        return false; 
	    } else if (!this.status.equals(other.status)) {
	      return false;
	    }  if (this.timeZoneId != other.timeZoneId)
	      return false; 
	    if (this.userDepartment == null) {
	      if (other.userDepartment != null)
	        return false; 
	    } else if (!this.userDepartment.equals(other.userDepartment)) {
	      return false;
	    }  if (this.userName == null) {
	      if (other.userName != null)
	        return false; 
	    } else if (!this.userName.equals(other.userName)) {
	      return false;
	    }  if (this.userRoles == null) {
	      if (other.userRoles != null)
	        return false; 
	    } else if (!this.userRoles.equals(other.userRoles)) {
	      return false;
	    }  return true;
	  }*/
	  
	  

}
